[tox]
envlist = py{37,38,39,310,py3}-{linux,macos}
skip_missing_interpreters = true
isolated_build = true
skipsdist=True

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    pypy3: pypy3

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    #windows-latest: windows

[testenv]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

whitelist_externals =
    bash

deps =
    pip>=22.0.3
    construct
    nose
    coverage
    coverage_python_version

commands =
    python -m pip install .
    #python -m unittest usb_protocol
    bash -c 'export TEST_FILES=$(find usb_protocol/ -name \*.py | xargs grep -l "import unittest"); \
        nosetests -x --detailed-errors $TEST_FILES'

[testenv:style]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    flake8
    flake8-bugbear

commands =
    flake8 usb_protocol/

[testenv:build]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    setuptools
    wheel
    build
    twine

commands =
    python -m build .
    twine check dist/*

[testenv:dev]
skip_install = true
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    pip>=20.0.1
    construct
    pytest
    coverage
    coverage_python_version

commands_pre =
    python -m pip install -U pip
    python -m pip install -e .

commands =
    pytest -v --flake8 usb_protocol/ --cov usb_protocol --cov-report term-missing

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    pip>=22.0.3
    construct
    construct-typing
    setuptools_scm
    mypy

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive usb_protocol/
