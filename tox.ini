[tox]
envlist = py{37,38,39,310,py3}-{linux,macos,windows}
skip_missing_interpreters = true
isolated_build = true
skipsdist=True

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    pypy3: pypy3

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    pip>=20.0.1
    construct
    pytest
    pytest-cov
    coverage
    coverage_python_version

#commands_pre =
#    python -m pip install -U pip
#    pip install .

commands =
    python -m pytest -v --cov usb_protocol --cov-branch --cov-report term-missing
    coverage xml

[testenv:style]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    construct
    flake8
    flake8-bugbear

commands =
    flake8 usb_protocol/

[testenv:lint]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    construct
    pylint

commands =
    #pylint --limit-inference-results=100 --ignore-paths='.*examples/' \
    pylint --fail-under=7.00 -rn -sy usb_protocol/

[testenv:build]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    setuptools
    wheel
    build
    twine

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals = bash

deps =
    pip>=22.0.3

commands =
    bash -c 'export WHL_FILE=$(ls dist/*.whl); \
        python -m pip install $WHL_FILE'
    python examples/simple_descriptors.py

[testenv:dev]
skip_install = true
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    pip>=22.0.3
    construct

commands =
    python -m pip install -e .
    python -m unittest discover

[testenv:mypy]
skip_install = true
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv = PYTHONPATH = {toxinidir}

deps =
    pip>=22.0.3
    construct
    construct-typing
    setuptools_scm
    mypy

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive usb_protocol/

[testenv:docs]
skip_install = true
allowlist_externals =
    make

deps =
    pip>=22.0.3
    .[doc]

commands = make -C docs html

[testenv:docs-lint]
skip_install = true
allowlist_externals =
    make

deps =
    pip>=22.0.3
    .[doc]

commands = make -C docs linkcheck
